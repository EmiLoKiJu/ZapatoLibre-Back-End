{
	"info": {
		"_postman_id": "6df81e76-ad5a-4f20-86d4-59df08bcd002",
		"name": "Testing User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27610988"
	},
	"item": [
		{
			"name": "Create user no email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"{{randomString}}\",\r\n  \"password\":\"asddsa123321\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"asddsa123321\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"{{randomString}}\",\r\n  \"email\":\"{{randomString}}@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no valid data password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomString = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString\", randomString);\r",
							"var randomString2 = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString2\", randomString2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"asd\",\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no valid data email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomString = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString\", randomString);\r",
							"var randomString2 = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString2\", randomString2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"asddsa\",\r\n  \"email\":true,\r\n  \"password\":\"{{randomString2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no valid data username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomString = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString\", randomString);\r",
							"var randomString2 = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString2\", randomString2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":15,\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"{{randomString2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create random user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomString = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString\", randomString);\r",
							"var randomString2 = Math.random().toString(36).substring(2, 12);\r",
							"pm.environment.set(\"randomString2\", randomString2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains an object\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData._id).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"{{randomString}}\",\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"{{randomString2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user email already taken",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"{{randomString}}\",\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"{{randomString2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains a token\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.accessToken).to.exist;\r",
							"    pm.expect(jsonData.accessToken).to.be.a('string');\r",
							"    var Token = jsonData.accessToken;\r",
							"    pm.environment.set(\"Token\", Token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"{{randomString2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user no password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"{{randomString}}@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user no valid tipe of data password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user no valid tipe of data email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":true,\r\n  \"password\":\"asddsa\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Unauthorized');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"{{randomString}}@gmail.com\",\r\n  \"password\":\"aad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user no email registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains bad request\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Unauthorized');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\":\"dadsd@gmail.com\",\r\n  \"password\":\"aad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5173/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains the object created\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"randomString\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5173/api/users/current",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user no token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains unauthorized\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Unauthorized');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5173/api/users/current",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user no token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains unauthorized\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.title).to.eql('Unauthorized');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5173/api/users/current",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains the object created\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.exist;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"    pm.expect(jsonData.user.username).to.eql(pm.environment.get(\"randomString\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5173/api/users/current",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5173",
					"path": [
						"api",
						"users",
						"current"
					]
				}
			},
			"response": []
		}
	]
}